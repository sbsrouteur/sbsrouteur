<ResourceDictionary
	xmlns:local="clr-namespace:Routeur"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    x:Class="RouteMgr.ResourceClass"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<!-- Les entrées du dictionnaire de ressources sont définies ici. -->
	
	<local:EnumRoutePendingBrushConverter x:Key="EnumRoutePendingBrushConverter"/>
	<local:EnumRouteModeConverter x:Key="EnumRouteModeConverter"/>
	<local:CoordsConverter x:Key="CoordsConverter"/>
	<local:RoutePointView  x:Key="RoutePointBaseViewResource"/>
	
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
	<Image x:Key="TrashIcon" Source ="/Routeur;Component/Graphics/Trash_48.png" />
	<Image x:Key="UploadIcon" Source="/Routeur;Component/Graphics/Up_48.png" />
			
	<DataTemplate x:Key="RoutePointActionsTemplate">
		<!--<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Image x:Name="PendingStatus" Source="/Routeur;Component/Graphics/kalarm-48.png" Width="48" Height="48" VerticalAlignment="Center"/>
			<Button HorizontalAlignment="Center" Margin="{StaticResource DefMargin}" Grid.Column="1" Height="48" Click="DeletePoint"  Width="48" IsEnabled="{Binding CanDelete, Mode=Default}" ToolTip="Delete" Visibility="{Binding CanDelete, Converter={StaticResource BooleanToVisibilityConverter}, Mode=Default}" VerticalAlignment="Center" >
				<ContentControl>
					<Image Source="/Routeur;Component/Graphics/Trash_48.png"/>
				</ContentControl>
			</Button>
			<Button HorizontalAlignment="Center" Margin="{StaticResource DefMargin}"  Grid.Column="2" Click="UploadChanges" Width="48" IsEnabled="{Binding NeedUpdate, Mode=Default}" ToolTip="Upload" Visibility="{Binding NeedUpdate, Converter={StaticResource BooleanToVisibilityConverter}, Mode=Default}" Height="48" VerticalAlignment="Center">
				<ContentControl>
					<Image Source="/Routeur;Component/Graphics/Up_48.png"/>
				</ContentControl>
			</Button>
		</Grid>-->
		<StackPanel Orientation="Horizontal">
			<Image x:Name="PendingStatus" Source="/Routeur;Component/Graphics/kalarm-48.png" Width="48" Height="48" VerticalAlignment="Center"/>
			<Button HorizontalAlignment="Center" Margin="{StaticResource DefMargin}" Grid.Column="1" Height="48" Click="DeletePoint"  Width="48" IsEnabled="{Binding CanDelete, Mode=Default}" ToolTip="Delete" Visibility="{Binding CanDelete, Converter={StaticResource BooleanToVisibilityConverter}, Mode=Default}" VerticalAlignment="Center" >
				<ContentControl>
					<Image Source="/Routeur;Component/Graphics/Trash_48.png"/>
				</ContentControl>
			</Button>
			<Button HorizontalAlignment="Center" Margin="{StaticResource DefMargin}"  Grid.Column="2" Click="UploadChanges" Width="48" IsEnabled="{Binding NeedUpdate, Mode=Default}" ToolTip="Upload" Visibility="{Binding NeedUpdate, Converter={StaticResource BooleanToVisibilityConverter}, Mode=Default}" Height="48" VerticalAlignment="Center">
				<ContentControl>
					<Image Source="/Routeur;Component/Graphics/Up_48.png"/>
				</ContentControl>
			</Button>
		</StackPanel>
		
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding IsPending}" Value="false">
				<Setter TargetName="PendingStatus" Property="Source" Value="/Routeur;Component/Graphics/kalarm_disabled-48.png" />
			</DataTrigger>
		</DataTemplate.Triggers>
		
	</DataTemplate>
	
	<DataTemplate x:Key="RoutePointViewActionsTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Image x:Name="PendingStatus" Source="/Routeur;Component/Graphics/kalarm-48.png" Width="48" Height="48" VerticalAlignment="Center"/>
			<Button HorizontalAlignment="Center" Margin="{DynamicResource DefMargin}" Grid.Column="1" Height="48" Click="DeletePointView"  Width="48" ToolTip="Delete" VerticalAlignment="Center" >
				<ContentControl>
					<Image Source="/Routeur;Component/Graphics/Trash_48.png"/>
				</ContentControl>
			</Button>
			
		</Grid>
		
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding IsPending}" Value="false">
				<Setter TargetName="PendingStatus" Property="Source" Value="/Routeur;Component/Graphics/kalarm_disabled-48.png" />
			</DataTrigger>
		</DataTemplate.Triggers>
		
	</DataTemplate>
			
	<DataTemplate x:Key="PointValueTemplate">
		<Grid>
			<Grid Visibility="{Binding HasDoubleValue, Mode=Default}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<TextBox Text="{Binding RouteValue.Value,  Mode=TwoWay, UpdateSourceTrigger=LostFocus}" TextAlignment="Right" Style="{DynamicResource DoubleFormatCheckTextBox}" Grid.ColumnSpan="1" Margin="4,4,72.9616666666667,4" Width="60"/>
			</Grid>
			<Grid Visibility="{Binding HasWPValue, Mode=Default}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" MinWidth="101.977"/>
					<ColumnDefinition Width="10	"/>
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<CheckBox Margin="{DynamicResource DefMargin}"   Content="Go to Next WP" Grid.RowSpan="1" IsChecked="{Binding RouteValue.UseRaceWP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				<CheckBox Grid.Column="2" Content="Set bearing at WP" IsChecked="{Binding RouteValue.SetBearingAtWP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				<TextBox Grid.Row="1" Grid.Column="2" Margin="{DynamicResource DefMargin}" VerticalAlignment="Top" Visibility="{Binding RouteValue.SetBearingAtWP, Converter={StaticResource BooleanToVisibilityConverter}, Mode=Default}" Text="{Binding RouteValue.BearingAtWP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource DoubleFormatCheckTextBox}" Width="60" HorizontalAlignment="Left"/>
				<!-- Events  MouseLeftButtonDown="StartTargetCaptureGrab" MouseLeftButtonUp="EndTargetCaptureGrab" MouseMove="AlternateDestCapture" -->
				<Image x:Name="image" Source="..\Graphics\Target-32.png" MouseLeftButtonDown="StartTargetCaptureGrab" MouseLeftButtonUp="EndTargetCaptureGrab" MouseMove="AlternateDestCapture" Stretch="Fill" Width="23" Height="23" ToolTip="Drag le to target point" HorizontalAlignment="Right" Margin="0,28.96,8,7.96" Grid.Column="2" Grid.Row="1"/>
				<Grid Grid.Row="2" Visibility="{Binding RouteValue.UseCustomWP, Converter={StaticResource BooleanToVisibilityConverter}, Mode=Default}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0.343*"/>
						<ColumnDefinition Width="0.657*"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" MinHeight="16.47"/>
					</Grid.RowDefinitions>
					<TextBlock Text="Lat." Margin="{DynamicResource DefMargin}"/>
					<TextBlock Text="Lon." Grid.Row="1" Margin="{DynamicResource DefMargin}"/>
					<TextBox Grid.Column="1" Text="{Binding RouteValue.WPLat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource DoubleFormatCheckTextBox}" Width="115" HorizontalAlignment="Center" VerticalAlignment="Top"/>
					<TextBox Grid.Row="2" Text="{Binding RouteValue.WPLon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Style="{DynamicResource DoubleFormatCheckTextBox}" Width="115" HorizontalAlignment="Center" VerticalAlignment="Top"/>
					
					
				</Grid>
			</Grid>
		</Grid>
	</DataTemplate>
	
				<Style x:Key="RouteRowStyle" TargetType="{x:Type DataGridRow}">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
				<Setter Property="ValidationErrorTemplate">
					<Setter.Value>
						<ControlTemplate>
							<TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Foreground="Red" Text="!"><Run Text="!"/></TextBlock>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridRow}">
							<Border x:Name="DGR_Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
								<SelectiveScrollingGrid>
									<SelectiveScrollingGrid.RowDefinitions>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
									</SelectiveScrollingGrid.RowDefinitions>
									<SelectiveScrollingGrid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</SelectiveScrollingGrid.ColumnDefinitions>
									<DataGridCellsPresenter Background="{Binding IsPending, Converter={StaticResource EnumRoutePendingBrushConverter}, Mode=Default}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ItemsPanel="{TemplateBinding ItemsPanel}" Grid.Column="1"/>
									<DataGridDetailsPresenter Visibility="{TemplateBinding DetailsVisibility}" Grid.Column="1" Grid.Row="1">
										<SelectiveScrollingGrid.SelectiveScrollingOrientation>
											<Binding Path="AreRowDetailsFrozen" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
												<Binding.ConverterParameter>
													<SelectiveScrollingOrientation>Vertical</SelectiveScrollingOrientation>
												</Binding.ConverterParameter>
											</Binding>
										</SelectiveScrollingGrid.SelectiveScrollingOrientation>
									</DataGridDetailsPresenter>
									<DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical">
										<DataGridRowHeader.Visibility>
											<Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
												<Binding.ConverterParameter>
													<DataGridHeadersVisibility>Row</DataGridHeadersVisibility>
												</Binding.ConverterParameter>
											</Binding>
										</DataGridRowHeader.Visibility>
									</DataGridRowHeader>
								</SelectiveScrollingGrid>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>


			
</ResourceDictionary>