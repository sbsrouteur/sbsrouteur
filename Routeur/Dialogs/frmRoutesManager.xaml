<!--
 This file is part of Routeur.
Copyright (C) 2011  sbsRouteur(at)free.fr

Routeur is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Routeur is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Foobar.  If not, see<http://www.gnu.org/licenses/> .-->

<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Routeur="clr-namespace:Routeur" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	x:Class="frmRoutesManager"
	x:Name="Window"
	Title="frmRoutesManager"
	Width="640" Height="480" mc:Ignorable="d">
	
	<Window.Resources >
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="RouteMgrResources.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<DataTemplate DataType="{x:Type Routeur:RecordedRoute}">
				<Grid>
					<TextBlock Text="{Binding RouteName, Mode=Default}"  />
				</Grid>
			</DataTemplate>
		</ResourceDictionary>
	</Window.Resources>
	<Grid x:Name="LayoutRoot">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="0.268*"/>
			<ColumnDefinition Width="0.732*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="0.269*"/>
			<RowDefinition Height="0.623*"/>
			<RowDefinition Height="0.108*"/>
		</Grid.RowDefinitions>
		<ListBox x:Name="RaceList" Margin="{DynamicResource DefMargin}" ItemsSource="{Binding RoutesInRace, Mode=Default}" Grid.RowSpan="2"/>
		<Button Grid.Row="2" Content="Add New Route" Click="AddNewRoute" Margin="{DynamicResource DefMargin}" />
		<Button HorizontalAlignment="Right" Margin="{DynamicResource DefMargin}" Width="75" Content="Close" Grid.Column="1" Grid.Row="2" Click="OnClose"/>
		<StackPanel Grid.Row="2" Grid.Column="3" Orientation="Horizontal" HorizontalAlignment="Left" >
			<Button HorizontalAlignment="Right" Margin="{DynamicResource DefMargin}" Width="75"  Grid.Column="1" Grid.Row="2" Click="OnAddPoint" DataContext="{Binding SelectedItem, ElementName=dataGrid}" Visibility="Collapsed">
				<ContentControl >
					<Image Source="/Routeur;component/Graphics/Add-48.png"></Image>
				</ContentControl>
			</Button>
		</StackPanel>
		<GridSplitter HorizontalAlignment="Left" Width="8.768" Grid.Column="1" Foreground="{x:Null}" Background="Red" Margin="-4,0,0,0" Grid.RowSpan="4">
			<GridSplitter.OpacityMask>
				<RadialGradientBrush>
					<GradientStop Color="#00000000" Offset="0"/>
					<GradientStop Color="White" Offset="1"/>
				</RadialGradientBrush>
			</GridSplitter.OpacityMask>
		</GridSplitter>
		<Grid Grid.Row="1" Grid.Column="1">
			<DataGrid x:Name="dataGrid" Margin="4" ItemsSource="{Binding Route, Mode=Default}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" RowStyle="{DynamicResource RouteRowStyle}" VerticalContentAlignment="Center" Grid.Row="1" Grid.Column="1" DataContext="{Binding SelectedItem, ElementName=RaceList, Mode=Default}">
				<DataGrid.Columns>
					<DataGridTextColumn Header="Date" Binding="{Binding ActionDate, Mode=Default}"/>
					<DataGridTextColumn Header="Pos" Binding="{Binding P, Mode=Default}"/>
					<DataGridTextColumn Header="Mode" Binding="{Binding RouteMode, Mode=Default}"/>
					<DataGridTextColumn Header="Value" Binding="{Binding RouteValue, Mode=Default}"/>
					<!--<DataGridComboBoxColumn SelectedItemBinding="{Binding RouteMode, Converter={StaticResource EnumRouteModeConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding EnumRouteModes, Source={StaticResource RoutePointBaseViewResource}}" Header="Mode"/>
					<DataGridTemplateColumn Header="Value" CellTemplate="{StaticResource PointValueTemplate}"/>
					<DataGridTemplateColumn Header="Actions" CellTemplate="{StaticResource RoutePointViewActionsTemplate}"/>
					-->
				</DataGrid.Columns>
			</DataGrid>
		</Grid>
		<Grid Grid.Column="1" DataContext="{Binding SelectedItem, ElementName=RaceList, Mode=Default}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.284*"/>
				<ColumnDefinition Width="0.716*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" MinHeight="14"/>
				<RowDefinition Height="Auto" MinHeight="14"/>
				<RowDefinition Height="Auto" MinHeight="14"/>
				<RowDefinition Height="Auto" MinHeight="14"	/>
			</Grid.RowDefinitions>
			<TextBlock Text="Route Name" TextWrapping="Wrap"/>
			<TextBlock Grid.Row="2" Text="Route Color" TextWrapping="Wrap"/>
			<TextBox Grid.Column="1" Text="{Binding RouteName, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" TextWrapping="Wrap"/>
			<CheckBox Grid.Row="1" Grid.Column="1" Content="Route is Visible on map" IsChecked="{Binding Visible, Mode=TwoWay}" />
			<StackPanel Grid.Row="3" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="{DynamicResource DefMargin}" >
				<Button Content="Recompute Route" Margin="{DynamicResource DefMargin}" Click="OnRouteRecompute"/>
				<Button Content="Duplicate Route" Margin="{DynamicResource DefMargin}" Click="OnRouteDuplicate"/>
				<Button Content="Delete Route" Margin="{DynamicResource DefMargin}" Click="OnRouteDelete"/>
				<Button Content="Export Route..." Margin="{DynamicResource DefMargin}" Click="OnRouteExport"/>
			</StackPanel>
			<Grid Grid.Row="2" Grid.Column="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="0.1*"/>
					<ColumnDefinition Width="0.1*"/>
					<ColumnDefinition Width="0.1*"/>
					<ColumnDefinition Width="0.1*"/>
				</Grid.ColumnDefinitions>
				<Rectangle Fill="{Binding ColorBrush, Mode=Default}" />
				<TextBox Text="{Binding ColorR, Mode=TwoWay}" Grid.Column="1" />
				<TextBox Text="{Binding ColorG, Mode=TwoWay}" Grid.Column="2" />
				<TextBox Text="{Binding ColorB, Mode=TwoWay}" Grid.Column="3" />
			</Grid>
			
		</Grid>
	</Grid>
</Window>