<!--
 This file is part of Routeur.
Copyright (C) 2011  sbsRouteur(at)free.fr

Routeur is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Routeur is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Foobar.  If not, see<http://www.gnu.org/licenses/> .-->

<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d" xmlns:local="clr-namespace:Routeur"
	x:Class="frmRouterConfiguration"
	x:Name="Window"
	Title="Grid Route Setup"
	Width="624" Height="480" Icon="/Routeur;Component/Graphics/System-Preferences.ico">

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Routeur;Component/Styles/ControlsStyles.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<local:CoordsConverter x:Key="CoordsConverter"/>
			<Storyboard x:Key="CaptureTarget">
				<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(UIElement.Opacity)">
					<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
					<SplineDoubleKeyFrame KeyTime="00:00:01" Value="0.295"/>
				</DoubleAnimationUsingKeyFrames>
				<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(Window.WindowStyle)">
					<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static WindowStyle.SingleBorderWindow}"/>
					<DiscreteObjectKeyFrame KeyTime="00:00:00.2000000" Value="{x:Static WindowStyle.None}"/>
				</ObjectAnimationUsingKeyFrames>
				<BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(Window.AllowsTransparency)">
					<DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
					<DiscreteBooleanKeyFrame KeyTime="00:00:01" Value="True"/>
				</BooleanAnimationUsingKeyFrames>
			</Storyboard>
		</ResourceDictionary>
	</Window.Resources>

	<Grid x:Name="LayoutRoot" VerticalAlignment="Bottom">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="150" />
			<ColumnDefinition/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" MinHeight="24"/>
			<RowDefinition Height="Auto" MinHeight="24"/>
			<RowDefinition Height="Auto" MinHeight="24"/>
			<RowDefinition Height="Auto" MinHeight="24"/>
			<RowDefinition Height="Auto" MinHeight="24"/>
			<RowDefinition Height="Auto" MinHeight="24"/>
			<RowDefinition Height="Auto" MinHeight="24"/>
			<RowDefinition Height="Auto" MinHeight="24"/>
			<RowDefinition Height="Auto" MinHeight="48.172"/>
			
		</Grid.RowDefinitions>
		<StackPanel Grid.Column="1" Grid.Row="8" Orientation="Horizontal" HorizontalAlignment="Right" d:LayoutOverrides="GridBox">
			<Button x:Name="cmdCancel" Content="Cancel" RenderTransformOrigin="-3.136,0.62" Width="100" Height="42.172" HorizontalAlignment="Left" Margin="{DynamicResource DefMargin}" d:LayoutOverrides="Height" Style="{DynamicResource DefaultButton}" Click="cmdCancelClick"/>
			<Button x:Name="cmdOK" Content="OK" Width="100" Height="42.172" HorizontalAlignment="Left" Margin="{DynamicResource DefMargin}" d:LayoutOverrides="Height" Style="{DynamicResource DefaultButton}" Click="cmdOKClick"/>
		</StackPanel>
		<TextBlock Text="Track forward Angle:" TextWrapping="Wrap" Grid.Row="1"/>
		<Grid Grid.ColumnSpan="2" Grid.Row="2" Background="#FFD4E2FF">
			<Grid.ColumnDefinitions >
				<ColumnDefinition Width="1*"/>
				<ColumnDefinition Width="1*"/>
				<ColumnDefinition Width="1*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions >
				<RowDefinition Height="0"/>
				<RowDefinition Height="0"/>
				<RowDefinition Height="1*"/>
			</Grid.RowDefinitions>
			<!--<TextBlock Text="Isochrones Step 1st 24h:" TextWrapping="Wrap" Grid.Column="0" Grid.Row="0" TextAlignment="Center"/>
			<TextBlock Text="Isochrones Step 24h-48h:" TextWrapping="Wrap" Grid.Column="1" Grid.Row="0" TextAlignment="Center"/>
			<TextBlock Text="Isochrones Step &gt;48h:" TextWrapping="Wrap" Grid.Column="2" Grid.Row="0" TextAlignment="Center"/>
			<TextBox Text="{Binding IsoStep, Mode=TwoWay, UpdateSourceTrigger=Default}" Grid.Column="0" Grid.Row="1" Style="{DynamicResource TimeSpanFormatCheckTextBox}" />
			<TextBox Text="{Binding IsoStep_24, Mode=TwoWay, UpdateSourceTrigger=Default}" Grid.Column="1" Grid.Row="1" Style="{DynamicResource TimeSpanFormatCheckTextBox}" />
			<TextBox Text="{Binding IsoStep_48, Mode=TwoWay, UpdateSourceTrigger=Default}" Grid.Column="2" Grid.Row="1" Style="{DynamicResource TimeSpanFormatCheckTextBox}" />
			!!-->
			<StackPanel Grid.Row="2" Orientation="Horizontal" Grid.ColumnSpan="3" >
				<TextBlock Text="Angle Step:" TextWrapping="Wrap" />
				<TextBox MinWidth="40" Text="{Binding IsoAngleStep, Mode=TwoWay, UpdateSourceTrigger=Default}" Style="{DynamicResource DoubleFormatCheckTextBox}" />
				<TextBlock Text="Routing zone excenticity:" TextWrapping="Wrap" />
				<TextBox MinWidth="40" Text="{Binding EllipseExtFactor, Mode=TwoWay, UpdateSourceTrigger=Default}" Style="{DynamicResource DoubleFormatCheckTextBox}" />
			</StackPanel>
		</Grid>
		<Grid Grid.Row="3" Grid.ColumnSpan="2" Background="#FFF2F1FF">
			<Grid.ColumnDefinitions >
				<ColumnDefinition Width="1*"/>
				<ColumnDefinition Width="1*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions >
				<RowDefinition Height="1*"/>
				<RowDefinition Height="1*"/>
				<RowDefinition Height="1*"/>
			</Grid.RowDefinitions>
			<StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
				<TextBlock Text="Alternate Start Date:" TextWrapping="Wrap" Grid.Row="6"/>
				<CheckBox HorizontalAlignment="Left" IsChecked="{Binding UseCustomStartDate, Mode=Default}" Margin="{DynamicResource DefMargin}"/>
				<TextBox Text="{Binding CustomStartDate, Mode=TwoWay, UpdateSourceTrigger=Default}" Margin="{DynamicResource DefMargin}" MinWidth="150" HorizontalContentAlignment="Stretch" />
			</StackPanel>
			<StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" Height="29" Grid.Row="1" >
				<TextBlock Text="Alt.Start Point:" />
				<CheckBox HorizontalAlignment="Left" IsChecked="{Binding UseCustomStart, Mode=Default}"/>
				<Image x:Name="imageStart" Source="/Routeur;Component/Graphics/Target-32.png" Stretch="Fill" Width="23" Height="23" MouseLeftButtonDown="StartTargetCaptureGrab" MouseLeftButtonUp="EndTargetCaptureGrab" MouseMove="AlternateDestCapture" Margin="0,0,0,6" ToolTip="Drag to set routing start point"/>
				<TextBox Text="{Binding RouteStart, Converter={StaticResource CoordsConverter}, Mode=TwoWay, UpdateSourceTrigger=Default}" IsEnabled="{Binding UseCustomStart, Mode=Default}" VerticalAlignment="Bottom" Height="21.96" Grid.Column="1" Grid.Row="1" Margin="{DynamicResource DefMargin}" d:LayoutOverrides="GridBox" MinWidth="150"  />
			</StackPanel>
			<StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" Grid.Row="1" Grid.Column="1" >
				<TextBlock Text="Use alternate Dest:" TextWrapping="Wrap" VerticalAlignment="Bottom" Height="29"/>
				<CheckBox HorizontalAlignment="Left" IsChecked="{Binding UseCustomDest, Mode=Default}" Margin="{DynamicResource DefMargin}"/>
				<Image x:Name="image" Source="/Routeur;Component/Graphics/Target-32.png" Stretch="Fill" Width="23" Height="23" MouseLeftButtonDown="StartTargetCaptureGrab" MouseLeftButtonUp="EndTargetCaptureGrab" MouseMove="AlternateDestCapture" Margin="0,0,0,6" ToolTip="Drag to set routing destination point"/>
				<TextBox Text="{Binding RouteDest, Converter={StaticResource CoordsConverter}, Mode=TwoWay, UpdateSourceTrigger=Default}" IsEnabled="{Binding UseCustomDest, Mode=Default}" Height="21.96" Grid.Column="1" Grid.Row="2" Margin="{DynamicResource DefMargin}" MinWidth="150"  />
			</StackPanel>
			
		</Grid>
		<Grid Grid.Column="1" Grid.Row="1 ">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.09*"/>
				<ColumnDefinition Width="0.91*"/>
			</Grid.ColumnDefinitions>
			<TextBox Text="{Binding IsoLookupAngle, Mode=TwoWay, UpdateSourceTrigger=Default}" Style="{DynamicResource DoubleFormatCheckTextBox}" />
			<Slider VerticalAlignment="Center" Grid.Column="1" Maximum="180" SmallChange="1" TickFrequency="10" TickPlacement="BottomRight" LargeChange="10" Value="{Binding IsoLookupAngle, Mode=TwoWay, UpdateSourceTrigger=Default}"/>
		</Grid>
		<Grid Grid.ColumnSpan="2" Grid.Row="4" Background="#FFE1E9FF" d:LayoutOverrides="GridBox">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="1*"/>
				<ColumnDefinition Width="1*"/>
			</Grid.ColumnDefinitions>
			<StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
				<TextBlock Text="Routhing Algorithm"/>
				<ComboBox Grid.Column="1" ItemsSource="{Binding RouteurModes}" SelectedValue="{Binding RouteurMode}"/>
			</StackPanel>
		</Grid>
		
		<Grid Grid.ColumnSpan="2" Grid.Row="7" >
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="150"/>
				<ColumnDefinition Width="0.758*"/>
			</Grid.ColumnDefinitions>
		</Grid>
        <StackPanel Grid.Row="5" Grid.ColumnSpan="2">
        	<CheckBox  Content =" Use Fast Routing (ignore high angles and low angles in polar)" Grid.Row="10" Grid.ColumnSpan ="2" IsChecked="{Binding FastRouteShortPolar,Mode=TwoWay}"/>
			<CheckBox  Content =" Use Fast Routing (do not update meteo in isochrone interval)" Grid.Row="7" Grid.ColumnSpan ="2" IsChecked="{Binding FastRouteShortMeteo,Mode=TwoWay}"/>
			<CheckBox  Content =" Save Route when complete" Grid.Row="11" Grid.ColumnSpan ="2" IsChecked="{Binding SaveRoute,Mode=TwoWay}"/>
			<CheckBox  Content =" Autorestart routing when complete" Grid.Row="6" Grid.ColumnSpan ="2" IsChecked="{Binding AutoRestartRouter,Mode=TwoWay}"/>
		</StackPanel>

    </Grid>
</Window>